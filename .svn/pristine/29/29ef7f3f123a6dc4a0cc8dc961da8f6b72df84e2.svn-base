import util from '/utils/util'
import urls from '/utils/urls'
import network from '/utils/network'
 var orderId;
Page({
  data: {
        cancelOrderReason:['想要重新下单','商品价格较贵','等待时机较长','是想了解下单流程','不想要了'],
        reasonIdx:0,
        collectBox:false,
        orderId:"",
  },
  onLoad(option) {
    const orderId=option.orderId
    this.getOrderDetail(orderId)
  },
  getOrderDetail(orderId){
        const myparams =new Object();
        myparams.orderId=orderId;
  network.post({
     url: urls.orderDetail,
     params: myparams,
     success: (data) => {
       my.hideLoading();
       console.log(data)
        console.log(data.result)
       
      this.setData({
        info:data.result,
        imgSrc:data.imgSrc
      })
      },
      fail: () => {
      
    this.setData({
      
      })
     
     
      },
     
  })

  },
   toBill(e){
     console.log(orderId)
        my.navigateTo({
          url:"../bill/bill?orderId="+e.target.dataset.orderId
        });
      },
        closeBox(){
    this.setData({
      mianmi:false,
      zijin:false
    })
  },
  mianmi(){
    this.setData({
      mianmi:true
    })   
  },
   zijin(){
    this.setData({
      zijin:true
    })
   },
   cancelOrder(e){
  this.setData({
    cancel:true,
    opid:e.target.dataset.orderId
  })
  console.log(this.data.opid)
  
},
cancelcancel(){
  this.setData({
    cancel:false
  })
},
selectReason(e){
  this.setData({
    reasonIdx:e.target.dataset.index
  })
},
collectGood(e){//确认收货
this.setData({
  collectBox:true,
  orderId:e.target.dataset.orderId
})
console.log(this.data.orderId)

},
confirmCollect(){
  console.log(11111111111111)
  const that=this;
    my.showLoading({
  });
   const myparams =new Object();
   console.log(that.data.orderId)
   myparams.orderId=that.data.orderId;
   console.log(myparams)
   
  network.post({
     url: urls.collectGoods,
     params: myparams,
     success: (data) => {
       console.log(data)
      that.getOrderDetail(that.data.orderId)
      that.setData({
         collectBox:false,
      })
  //that.orderList();  
  },
   fail:(data)=>{

   }
 
  })

},
cancelCollect(){
  this.setData({
     collectBox:false,
  })
},
confirmcancel(e){
  my.showLoading({
  });
   const myparams =new Object();
   myparams.orderId=this.data.opid;
   myparams.orderMark=this.data.cancelOrderReason[this.data.reasonIdx];
   console.log(myparams)
   
  network.post({
     url: urls.cancelOrder,
     params: myparams,
     success: (data) => {
         list=[];
  hasmore=true; 
  pageNo=1;
  
  this.orderList();

       
  }
  })

},
toObtain(e){
  my.navigateTo({
    url:"../logistics/logistics?orderId="+e.target.dataset.orderId
  })
}
});
